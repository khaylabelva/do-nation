// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(cuid()) 
  username     String     @unique
  email        String     @unique
  password     String
  totalDonasi  Int        @default(0) 
  totalAksi    Int        @default(0) 
  aksiHistory  UserAksi[]   
  donasiHistory UserDonasi[]
  session      Session[] 
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Session {
  id        String @id
  userId    String   
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id]) // Foreign key
}


model CampaignDonasi {
  id             Int         @id @default(autoincrement())
  judul          String
  foto           String
  deskripsi      String
  penyelenggara  String
  targetDonasi   Int
  progressDonasi Int         @default(0)
  batasWaktu     DateTime    
  donaturList UserDonasi[]    // Daftar donatur
  createdAt      DateTime    @default(now())
}

model CampaignAksi {
  id             Int         @id @default(autoincrement())
  judul          String
  foto           String
  deskripsi      String
  penyelenggara  String
  targetAksi     Int
  progressAksi   Int         @default(0)
  batasWaktu     DateTime
  konversi       Int
  aksiList       Aksi[]      
  pelakuAksiList UserAksi[]  
  createdAt      DateTime    @default(now())
}

model Aksi {
  campaignId Int    
  id         Int      
  deskripsi  String    
  campaign   CampaignAksi @relation(fields: [campaignId], references: [id])

  @@id([campaignId, id]) 
}

model UserAksi {
  id               Int            @default(autoincrement()) // Unique ID for each record
  userId           String
  campaignId       Int
  deskripsi        String         @default("") // New column for description
  fotoDokumentasi  String
  verified         Boolean        @default(false)
  user             User           @relation(fields: [userId], references: [id])
  campaign         CampaignAksi   @relation(fields: [campaignId], references: [id])
  createdAt        DateTime       @default(now())

  @@id([id, userId, campaignId]) // Composite primary key
}

model UserDonasi {
  id               Int            @default(autoincrement()) // Unique ID for each record
  userId           String
  campaignId       Int
  jumlah           Int
  metodePembayaran String
  deskripsi        String         @default("") // New column for description
  user             User           @relation(fields: [userId], references: [id])
  campaign         CampaignDonasi @relation(fields: [campaignId], references: [id])
  createdAt        DateTime       @default(now())

  @@id([id, userId, campaignId]) // Composite primary key
}


